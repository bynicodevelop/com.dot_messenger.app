rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read, write: if false;
    }

    match /users/{userId} {
      match /channels/{channelId} {
        allow list, create, delete: if request.auth != null && request.auth.uid == userId;
      }
    }

    match /channels/{channelId} {
      allow list: if request.auth != null;

      allow update: if request.auth != null && /databases/$(database)/documents/users/$(request.auth.uid) in resource.data.followers

      function isAuthor() {
        return get(/databases/$(database)/documents/channels/$(channelId)).data.userRef == /databases/$(database)/documents/users/$(request.auth.uid);
      }

      function followersData() {
        return get(/databases/$(database)/documents/channels/$(channelId)).data.followers;
      }

      match /messages/{messageId} {
        allow read: if request.auth != null && /databases/$(database)/documents/users/$(request.auth.uid) in followersData();
        allow create: if request.auth != null && isAuthor();
      }
    }
  }
}